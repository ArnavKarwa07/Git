Configure:
git config --global user.name "username" 
git config --global user.email "email"
git config --list

Clone: git clone <link>

Status: git status

ls - to list all the files

Files: untracked - new files that git does not track yet
       modified
       unmodified
       staged - ready to be committed

add: git add <file_name> | git add . (TO ADD ALL THE FILES)

commit: git commit -m "message" (to commit the changes to local repository)

push: git push origin <branch> (upload changes to remote repository ie github)
      git push -u origin <branch> (to tell that all further push commands will be done on the same branch so next time you only need to run: git push) 

mkdir - make directory

init - used to initialize a new git repository

git remote add origin <link> (upload changes to remote repository)

git remote -v (to verify remote)

git branch (to check branch)

git branch -m <name> (to rename the branch)

Branches:
git branch (to check branch)

git branch -m <name> (to rename the branch)

git checkout <branch name> (to navigate)

git checkout -b <new branch name> (to create new branch)

git branch -d <branch name> (to delete a branch) //you cannot delete the branch you are in

Merge branches:
Method 1:
git diff <branch name> (compare)

git merge <branch name> 

Method 2:
create pull request

git pull origin main - fetch and download content from a remote repository and immediately update the local repository to match that content

Undoing changes:
Case1: staged changes
       git reset <file name>
       git reset (across all files)

Case2: accidental commits
       git reset head~1 (reset by 1 commt)

Case3: multiple commits
       git reset <commit hash> (go to particular commit using its hash value - obtained using git log)
       git reset --hard <commit hash> (to changes the code aswell)
